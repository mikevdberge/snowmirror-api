openapi: 3.1.0
x-stoplight:
  id: 63wbg3fuoium9
info:
  title: snowmirror-api
  version: '1.0'
  description: |-
    This document is a guide which will walk you through SnowMirror REST API. The purpose of the REST API is to allow developers to integrate SnowMirror with other applications.

    1.1. URIs of REST API Resources
    The API consists of resources identified by URIs. To call the API you have to make HTTP requests on the provided URIs. The URIs have following structure:

    http://{hostname}:{port}/api/{api-version}/{resource-name}

    hostname - name of the server where SnowMirror is running

    port - port on which SnowMirror is running

    api-version - version of API to use. Currently "v1" is the only option available. In future releases a version may increase

    resource-name - name of the resource you need to operate on. The resources are described in the following chapter

    Letâ€™s say you need to get information about a synchronization. Then you will have to make GET HTTP request on a resource called http://yourSnowMirrorServer:9090/api/v1/synchronization
    Also note that resources are secured. Please see Authentication and Security chapter for details.
  contact:
    name: ' GuideVision'
    url: 'https://www.snow-mirror.com/doc/RestApiGuide.html'
  summary: The purpose of the REST API is to allow developers to integrate SnowMirror with other applications.
servers:
  - url: 'http://localhost:9090/api/v1'
tags:
  - name: pet
    description: Synchronization
    externalDocs:
      description: ''
      url: 'https://www.snow-mirror.com/doc/RestApiGuide.html#section-api-sync'
paths:
  /pet:
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      x-speakeasy-entity-operation: Pet#create
      description: Add a new pet to the store
      operationId: addPet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
  /pet/{petId}:
    get:
      x-speakeasy-entity-operation: Pet#get
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      description: 'Update'
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
      x-speakeasy-entity-operation: Pet#update
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'            
      x-speakeasy-entity-operation: Pet#delete
security:
  - basic-authentication: []
components:
  securitySchemes:
    basic-authentication:
      type: http
      scheme: basic
  schemas:
    Pet:
      x-speakeasy-entity: Pet
      required:
        - name
      title: Pet
      x-stoplight:
        id: hra6rhcb5vsau
      type: object
      properties:
        id:
          type: string
        name:
          type: string
