{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "63wbg3fuoium9"
  },
  "info": {
    "title": "snowmirror-api",
    "version": "1.0",
    "description": "This document is a guide which will walk you through SnowMirror REST API. The purpose of the REST API is to allow developers to integrate SnowMirror with other applications.\n\n1.1. URIs of REST API Resources\nThe API consists of resources identified by URIs. To call the API you have to make HTTP requests on the provided URIs. The URIs have following structure:\n\nhttp://{hostname}:{port}/api/{api-version}/{resource-name}\n\nhostname - name of the server where SnowMirror is running\n\nport - port on which SnowMirror is running\n\napi-version - version of API to use. Currently \"v1\" is the only option available. In future releases a version may increase\n\nresource-name - name of the resource you need to operate on. The resources are described in the following chapter\n\nLet’s say you need to get information about a synchronization. Then you will have to make GET HTTP request on a resource called http://yourSnowMirrorServer:9090/api/v1/synchronization\nAlso note that resources are secured. Please see Authentication and Security chapter for details.",
    "contact": {
      "name": " GuideVision",
      "url": "https://www.snow-mirror.com/doc/RestApiGuide.html"
    },
    "summary": "The purpose of the REST API is to allow developers to integrate SnowMirror with other applications."
  },
  "servers": [
    {
      "url": "http://localhost:9090/api/v1"
    }
  ],
  "tags": [
    {
      "name": "synchronization",
      "description": "Synchronization",
      "externalDocs": {
        "description": "",
        "url": "https://www.snow-mirror.com/doc/RestApiGuide.html#section-api-sync"
      }
    }
  ],
  "paths": {
    "/synchronization": {
      "parameters": [],
      "get": {
        "summary": "Get a list of all synchronizations.",
        "x-speakeasy-entity-operation": "Synchronization#get",
        "tags": [
          "synchronization"
        ],
        "responses": {
          "200": {
            "description": "A list of synchronizations was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sync": {
                      "$ref": "#/components/schemas/synchronizations"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Could not parse a request or validations failed."
          }
        },
        "operationId": "get-synchronization",
        "description": "Returns a list of all synchronizations."
      },
      "post": {
        "tags": [
          "synchronization"
        ],
        "summary": "Creates a new synchronization",
        "x-speakeasy-entity-operation": "Synchronization#create",
        "operationId": "post-synchronization",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Creates a new synchronization. Returns newly created synchronization including its ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "synchronization"
        ],
        "summary": "Deletes synchronizations",
        "x-speakeasy-entity-operation": "Synchronization#delete",
        "operationId": "delete-synchronization",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Deletes synchronizations. To be able to delete a synchronization it must not be running."
      }
    },
    "/synchronization/export": {
      "get": {
        "tags": [
          "synchronization"
        ],
        "summary": "Your GET endpoint",
        "x-speakeasy-entity-operation": "Synchronization-Export#get",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-synchronizations-export",
        "description": "Exports all synchronizations and their settings.\n\nIt does not export activity logs. If you import them to some other environment, you should run the synchronizations from scratch. It does not export global setting (Settings → General Settings nor Settings → Advanced Properties)."
      }
    },
    "/synchronization/action": {
      "get": {
        "summary": "Your GET endpoint",
        "x-speakeasy-entity-operation": "Synchronization-Action#get",
        "tags": [
          "synchronization"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "actions": [
                        "SYNCHRONIZE",
                        "CLEAN_AND_SYNCHRONIZE",
                        "STOP"
                      ]
                    }
                  }
                },
                "examples": {
                  "Get list of actions": {
                    "value": {
                      "actions": [
                        "SYNCHRONIZE",
                        "CLEAN_AND_SYNCHRONIZE",
                        "STOP"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-synchronization-action",
        "description": "Returns a list of all actions which can be performed on synchronizations."
      },
      "parameters": [],
      "post": {
        "summary": "",
        "tags": [
          "synchronization"
        ],
        "operationId": "post-synchronization-action",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alreadyRunningSyncIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "disabledSyncIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "alreadyRunningSyncIds": [
                        1
                      ],
                      "disabledSyncIds": [
                        2
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string"
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "action": "SYNCHRONIZE",
                    "ids": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "x-speakeasy-entity-operation": "Synchronization-Action#create",
        "description": "Performs an action on the selected synchronizations.\nAPI ignores synchronizations which are already running. It also ignores synchronizations which are deactivated.\nAvailable actions are \"SYNCHRONIZE\", \"CLEAN_AND_SYNCHRONIZE\", \"DIFFERENTIAL_SYNCHRONIZATION\", \"STOP\""
      }
    }
  },
  "components": {
    "schemas": {
      "synchronizations": {
      "x-speakeasy-entity": "Synchronization",  
        "type": "object",
        "properties": {
          "sync": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "view": {
                  "type": "string"
                },
                "attachment": {
                  "type": "string"
                },
                "backup": {
                  "type": "string"
                },
                "backupAttachment": {
                  "type": "string"
                },
                "mirrorTable": {
                  "type": "string"
                },
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "prefix": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sysId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "allowInheritedColumns": {
                  "type": "boolean"
                },
                "referenceFieldType": {
                  "type": "string"
                },
                "autoSchemaUpdate": {
                  "type": "boolean"
                },
                "encodedQuery": {
                  "type": "string"
                },
                "deleteStrategy": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                },
                "scheduler": {
                  "type": "object",
                  "scheduletype": {
                    "type": "string"
                  },
                  "beginDate": {
                    "type": "string"
                  }
                },
                "fullLoadscheduler": {
                  "type": "object",
                  "executionType": {
                    "type": "string"
                  },
                  "scheduleType": {
                    "type": "string"
                  },
                  "beginDate": {
                    "type": "string"
                  }
                },
                "schedulerPriority": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-examples": {
          "Example 1": {
            "syncs": [
              {
                "id": 24,
                "name": "incident",
                "table": "incident",
                "mirrorTable": "incident",
                "columns": [
                  {
                    "name": "active",
                    "sysId": "8f2f4b99e1031100a24720593d95f563"
                  },
                  {
                    "name": "sys_id",
                    "sysId": "3a3f8b99e1031100a24720593d95f5d5"
                  }
                ],
                "allowInheritedColumns": true,
                "referenceFieldType": "BOTH",
                "autoSchemaUpdate": false,
                "encodedQuery": null,
                "deleteStrategy": "AUDIT",
                "active": true,
                "scheduler": {
                  "type": "MANUALLY",
                  "beginDate": "2014-08-07"
                },
                "fullLoadScheduler": {
                  "executionType": "CLEAN_AND_SYNCHRONIZE",
                  "type": "MANUALLY",
                  "beginDate": "2014-08-07"
                },
                "schedulerPriority": "NORMAL"
              },
              {
                "id": 25,
                "name": "incident_sla",
                "view": "incident_sla",
                "mirrorTable": "incident_sla",
                "columns": [
                  {
                    "prefix": "taskslatable",
                    "name": "taskslatable_sla",
                    "sysId": "d9719f5de1031100a24720593d95f53b"
                  },
                  {
                    "prefix": "inc",
                    "name": "inc_priority",
                    "sysId": "c72f4b99e1031100a24720593d95f56d"
                  }
                ],
                "allowInheritedColumns": false,
                "referenceFieldType": "BOTH",
                "autoSchemaUpdate": false,
                "encodedQuery": null,
                "deleteStrategy": "TRUNCATE",
                "active": true,
                "scheduler": {
                  "type": "DAILY",
                  "beginDate": "2014-08-07",
                  "time": "00:00"
                },
                "fullLoadScheduler": {
                  "executionType": "CLEAN_AND_SYNCHRONIZE",
                  "type": "DAILY",
                  "beginDate": "2014-08-07",
                  "time": "00:00"
                },
                "schedulerPriority": "NORMAL"
              },
              {
                "id": 2,
                "name": "u_rest_test_table_backup-ecf7afd3902e46aabc6b4266ae20f694",
                "backup": "u_rest_test_table",
                "mirrorTable": null,
                "columns": [
                  {
                    "name": "sys_id",
                    "sysId": "d58564b74ff112002a9053418110c7d2"
                  }
                ],
                "allowInheritedColumns": false,
                "autoSchemaUpdate": false,
                "referenceFieldType": "SYS_IDS",
                "encodedQuery": null,
                "deleteStrategy": "NONE",
                "active": true,
                "scheduler": {
                  "type": "MANUALLY",
                  "beginDate": "2014-08-07",
                  "time": "04:00",
                  "visible": false
                },
                "fullLoadScheduler": null,
                "schedulerPriority": "NORMAL",
                "synchronizationType": null,
                "masterTable": null,
                "attachmentDirectory": null,
                "retentionPeriod": 30,
                "format": "CSV",
                "updateBeforeSynchronizationRun": false
              }
            ]
          }
        },
        "title": "synchronizations",
        "x-stoplight": {
          "id": "b5d7c06caa157"
        },
        "examples": []
      }
    },
    "securitySchemes": {
      "basic-authentication": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic-authentication": []
    }
  ]
}